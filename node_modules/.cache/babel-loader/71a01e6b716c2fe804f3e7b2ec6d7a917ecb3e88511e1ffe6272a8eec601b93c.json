{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\portfolio_kris\\\\src\\\\components\\\\Music.jsx\";\nimport React from \"react\";\nimport \"./Music.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = \"3d8688b460024ef7ad2dcd6ab4982597\";\nconst redirectUri = \"http://localhost:3000/\";\nconst scopes = [\"user-read-currently-playing\", \"user-read-playback-state\"];\nlet token = null;\nlet interval = null;\nclass Music extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fetchSong = async () => {\n      if (!token) return;\n      const res = await fetch(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (res.status === 204 || res.status > 400) {\n        this.setState({\n          song: null\n        });\n        return;\n      }\n      const data = await res.json();\n      this.setState({\n        song: data\n      });\n    };\n    this.login = () => {\n      window.location = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}`;\n    };\n    this.state = {\n      song: null\n    };\n  }\n  componentDidMount() {\n    const hash = window.location.hash;\n    if (hash) {\n      const match = hash.match(/access_token=([^&]*)/);\n      if (match) {\n        token = match[1];\n        window.history.replaceState(null, null, \" \");\n        this.fetchSong();\n        interval = setInterval(this.fetchSong, 10000);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (interval) clearInterval(interval);\n  }\n  render() {\n    const {\n      song\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-container\",\n      children: [!token ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.login,\n        className: \"music-button\",\n        children: \"Connect Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : !song ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500\",\n        children: \"No song currently playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.item.album.images[1].url,\n          alt: \"Album Cover\",\n          className: \"music-album-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"music-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"music-title\",\n            children: song.item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"music-artist\",\n            children: song.item.artists[0].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"now-playing-label\",\n        children: \"Now Playing \\uD83C\\uDFB5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Music;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","clientId","redirectUri","scopes","token","interval","Music","Component","constructor","props","fetchSong","res","fetch","headers","Authorization","status","setState","song","data","json","login","window","location","join","state","componentDidMount","hash","match","history","replaceState","setInterval","componentWillUnmount","clearInterval","render","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","item","album","images","url","alt","name","artists"],"sources":["C:/Users/adity/portfolio_kris/src/components/Music.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./Music.css\";\r\n\r\nconst clientId = \"3d8688b460024ef7ad2dcd6ab4982597\";\r\nconst redirectUri = \"http://localhost:3000/\";\r\nconst scopes = [\"user-read-currently-playing\", \"user-read-playback-state\"];\r\n\r\nlet token = null;\r\nlet interval = null;\r\n\r\nclass Music extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      song: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const hash = window.location.hash;\r\n    if (hash) {\r\n      const match = hash.match(/access_token=([^&]*)/);\r\n      if (match) {\r\n        token = match[1];\r\n        window.history.replaceState(null, null, \" \");\r\n        this.fetchSong();\r\n        interval = setInterval(this.fetchSong, 10000);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (interval) clearInterval(interval);\r\n  }\r\n\r\n  fetchSong = async () => {\r\n    if (!token) return;\r\n    const res = await fetch(\"https://api.spotify.com/v1/me/player/currently-playing\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n\r\n    if (res.status === 204 || res.status > 400) {\r\n      this.setState({ song: null });\r\n      return;\r\n    }\r\n\r\n    const data = await res.json();\r\n    this.setState({ song: data });\r\n  };\r\n\r\n  login = () => {\r\n    window.location = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n      \"%20\"\r\n    )}`;\r\n  };\r\n\r\n  render() {\r\n    const { song } = this.state;\r\n\r\n    return (\r\n      <div className=\"music-container\">\r\n        {!token ? (\r\n          <button onClick={this.login} className=\"music-button\">\r\n            Connect Spotify\r\n          </button>\r\n        ) : !song ? (\r\n          <p className=\"text-sm text-gray-500\">No song currently playing</p>\r\n        ) : (\r\n          <div className=\"music-card\">\r\n            <img\r\n              src={song.item.album.images[1].url}\r\n              alt=\"Album Cover\"\r\n              className=\"music-album-cover\"\r\n            />\r\n            <div className=\"music-details\">\r\n              <p className=\"music-title\">{song.item.name}</p>\r\n              <p className=\"music-artist\">{song.item.artists[0].name}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"now-playing-label\">Now Playing ðŸŽµ</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Music;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,QAAQ,GAAG,kCAAkC;AACnD,MAAMC,WAAW,GAAG,wBAAwB;AAC5C,MAAMC,MAAM,GAAG,CAAC,6BAA6B,EAAE,0BAA0B,CAAC;AAE1E,IAAIC,KAAK,GAAG,IAAI;AAChB,IAAIC,QAAQ,GAAG,IAAI;AAEnB,MAAMC,KAAK,SAASR,KAAK,CAACS,SAAS,CAAC;EAClCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAuBfC,SAAS,GAAG,YAAY;MACtB,IAAI,CAACN,KAAK,EAAE;MACZ,MAAMO,GAAG,GAAG,MAAMC,KAAK,CAAC,wDAAwD,EAAE;QAChFC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUV,KAAK;QAAG;MAC9C,CAAC,CAAC;MAEF,IAAIO,GAAG,CAACI,MAAM,KAAK,GAAG,IAAIJ,GAAG,CAACI,MAAM,GAAG,GAAG,EAAE;QAC1C,IAAI,CAACC,QAAQ,CAAC;UAAEC,IAAI,EAAE;QAAK,CAAC,CAAC;QAC7B;MACF;MAEA,MAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7B,IAAI,CAACH,QAAQ,CAAC;QAAEC,IAAI,EAAEC;MAAK,CAAC,CAAC;IAC/B,CAAC;IAAA,KAEDE,KAAK,GAAG,MAAM;MACZC,MAAM,CAACC,QAAQ,GAAG,oDAAoDrB,QAAQ,qCAAqCC,WAAW,UAAUC,MAAM,CAACoB,IAAI,CACjJ,KACF,CAAC,EAAE;IACL,CAAC;IAzCC,IAAI,CAACC,KAAK,GAAG;MACXP,IAAI,EAAE;IACR,CAAC;EACH;EAEAQ,iBAAiBA,CAAA,EAAG;IAClB,MAAMC,IAAI,GAAGL,MAAM,CAACC,QAAQ,CAACI,IAAI;IACjC,IAAIA,IAAI,EAAE;MACR,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAAC,sBAAsB,CAAC;MAChD,IAAIA,KAAK,EAAE;QACTvB,KAAK,GAAGuB,KAAK,CAAC,CAAC,CAAC;QAChBN,MAAM,CAACO,OAAO,CAACC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC;QAC5C,IAAI,CAACnB,SAAS,CAAC,CAAC;QAChBL,QAAQ,GAAGyB,WAAW,CAAC,IAAI,CAACpB,SAAS,EAAE,KAAK,CAAC;MAC/C;IACF;EACF;EAEAqB,oBAAoBA,CAAA,EAAG;IACrB,IAAI1B,QAAQ,EAAE2B,aAAa,CAAC3B,QAAQ,CAAC;EACvC;EAuBA4B,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEhB;IAAK,CAAC,GAAG,IAAI,CAACO,KAAK;IAE3B,oBACExB,OAAA;MAAKkC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAC7B,CAAC/B,KAAK,gBACLJ,OAAA;QAAQoC,OAAO,EAAE,IAAI,CAAChB,KAAM;QAACc,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAEtD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,GACP,CAACvB,IAAI,gBACPjB,OAAA;QAAGkC,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAAyB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAElExC,OAAA;QAAKkC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBnC,OAAA;UACEyC,GAAG,EAAExB,IAAI,CAACyB,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,GAAI;UACnCC,GAAG,EAAC,aAAa;UACjBZ,SAAS,EAAC;QAAmB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eACFxC,OAAA;UAAKkC,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BnC,OAAA;YAAGkC,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAElB,IAAI,CAACyB,IAAI,CAACK;UAAI;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/CxC,OAAA;YAAGkC,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAElB,IAAI,CAACyB,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC,CAACD;UAAI;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eACDxC,OAAA;QAAKkC,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAEV;AACF;AAEA,eAAelC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}